(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{527:function(e,t,a){e.exports=a.p+"assets/img/vuex.29bf9f57.png"},528:function(e,t,a){e.exports=a.p+"assets/img/vuex2.c9f0c50f.png"},886:function(e,t,a){"use strict";a.r(t);var s=a(14),v=Object(s.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h2",{attrs:{id:"vuex"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vuex"}},[e._v("#")]),e._v(" vuex")]),e._v(" "),s("p",[e._v("Vuex 是一个专为 Vue.js 应用程序开发的状态管理模式。它采用集中式存储管理应用的所有组件的状态，并以相应的规则保证状态以一种可预测的方式发生变化。")]),e._v(" "),s("h3",{attrs:{id:"vuex-的数据传递流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vuex-的数据传递流程"}},[e._v("#")]),e._v(" vuex 的数据传递流程")]),e._v(" "),s("p",[s("img",{attrs:{src:a(527),alt:"image"}})]),e._v(" "),s("h3",{attrs:{id:"vuex-工作原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vuex-工作原理"}},[e._v("#")]),e._v(" vuex 工作原理")]),e._v(" "),s("ol",[s("li",[e._v("通过全局注入 store 对象，来实现组件间的状态共享")])]),e._v(" "),s("p",[e._v("利用 vue 的插件机制，使用 Vue.use(vuex)时，会调用 vuex 的 install 方法，装载 vuex")]),e._v(" "),s("p",[e._v("install 把传入的 "),s("code",[e._v("_Vue")]),e._v(" 赋值给 Vue 并执行了 applyMixin(Vue) 方法，applyMixin 方法使用 vue 混入机制，在 vue 的生命周期 beforeCreate 钩子函数前混入 vuexInit 方法，vuexInit 方法实现了 store 注入 vue 组件实例，并注册了 vuex store 的引用属性$store")]),e._v(" "),s("p",[e._v("Vuex 的 state 状态是响应式，是借助 vue 的 data 是响应式，将 state 存入 vue 实例组件的 data 中；")]),e._v(" "),s("p",[e._v("Vuex 的 getters 则是借助 vue 的计算属性 computed 实现数据实时监听。")]),e._v(" "),s("p",[s("img",{attrs:{src:a(528),alt:"image"}})]),e._v(" "),s("h3",{attrs:{id:"vuex-五大核心属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vuex-五大核心属性"}},[e._v("#")]),e._v(" vuex 五大核心属性")]),e._v(" "),s("ol",[s("li",[s("p",[e._v("state：存储数据，存储状态；在根实例中注册了 store 后，用 this.$store.state 来访问；对应 vue 里面的 data；存放数据方式为响应式，vue 组件从 store 中读取数据，如数据发生变化，组件也会对应的更新。")])]),e._v(" "),s("li",[s("p",[e._v("getter：可以认为是 store 的计算属性，它的返回值会根据它的依赖被缓存起来，且只有当它的依赖值发生了改变才会被重新计算。")])]),e._v(" "),s("li",[s("p",[e._v("mutation：更改 Vuex 的 store 中的状态的唯一方法是提交 mutation。")])]),e._v(" "),s("li",[s("p",[e._v("action：包含任意异步操作，通过提交 mutation 间接更变状态。")])]),e._v(" "),s("li",[s("p",[e._v("module：将 store 分割成模块，每个模块都具有 state、mutation、action、getter、甚至是嵌套子模块。")])])]),e._v(" "),s("p",[e._v("vuex 源码解析："),s("a",{attrs:{href:"https://github.com/answershuto/learnVue/blob/master/docs/Vuex%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90.MarkDown",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/answershuto/learnVue/blob/master/docs/Vuex源码解析.MarkDown"),s("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=v.exports}}]);