(window.webpackJsonp=window.webpackJsonp||[]).push([[174],{626:function(t,v,_){"use strict";_.r(v);var a=_(20),i=Object(a.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h2",{attrs:{id:"前端监控"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#前端监控"}},[t._v("#")]),t._v(" 前端监控")]),t._v(" "),_("p",[t._v("前端监控目的：获取用户行为以及跟踪产品在用户端的使用情况，并以监控数据为基础，指明产品优化的方向。")]),t._v(" "),_("h3",{attrs:{id:"监控指标"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#监控指标"}},[t._v("#")]),t._v(" 监控指标")]),t._v(" "),_("p",[_("code",[t._v("const timing = window.performance.timing")])]),t._v(" "),_("p",[t._v("前端性能指标主要有一下几种：")]),t._v(" "),_("p",[t._v("重定向耗时："),_("code",[t._v("timing.redirectEnd - timing.redirectStart")])]),t._v(" "),_("p",[t._v("DNS 查询耗时: "),_("code",[t._v("timing.domainLookupEnd - timing.domainLookupStart")])]),t._v(" "),_("p",[t._v("TCP 链接耗时 ："),_("code",[t._v("timing.connectEnd - timing.connectStart")])]),t._v(" "),_("p",[t._v("HTTP 请求耗时 ："),_("code",[t._v("timing.responseEnd - timing.responseStart")])]),t._v(" "),_("p",[t._v("解析 dom 树耗时 ： "),_("code",[t._v("timing.domComplete - timing.domInteractive")])]),t._v(" "),_("p",[t._v("首次渲染时间(First Paint Time 白屏时间) ："),_("code",[t._v("timing.responseEnd - timing.fetchStart")]),t._v(" 从请求开始到浏览器开始解析第一批 HTML 文档字节的时间差。")]),t._v(" "),_("p",[t._v("DOM ready 耗时 ："),_("code",[t._v("timing.domContentLoadedEventEnd - timing.navigationStart")])]),t._v(" "),_("p",[t._v("onload 时间："),_("code",[t._v("timing.loadEventEnd - timing.navigationStart")]),t._v("，也即是 onload 回调函数执行的时间。")]),t._v(" "),_("h2",{attrs:{id:"前端监控种类"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#前端监控种类"}},[t._v("#")]),t._v(" 前端监控种类")]),t._v(" "),_("ol",[_("li",[_("p",[t._v("行为监控（数据监控）")])]),t._v(" "),_("li",[_("p",[t._v("异常监控")])]),t._v(" "),_("li",[_("p",[t._v("性能监控")])])]),t._v(" "),_("h3",{attrs:{id:"行为监控-数据监控"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#行为监控-数据监控"}},[t._v("#")]),t._v(" 行为监控（数据监控）")]),t._v(" "),_("p",[t._v("行为监控（数据监控）：监听用户的行为")]),t._v(" "),_("p",[t._v("常见的监控项有：")]),t._v(" "),_("ol",[_("li",[_("p",[t._v("PV/UV:PV(page view)：即页面浏览量或点击量；UV：指访问某个站点或点击某条新闻的不同 IP 地址的人数")])]),t._v(" "),_("li",[_("p",[t._v("用户在每一个页面的停留时间")])]),t._v(" "),_("li",[_("p",[t._v("用户通过什么入口来访问该网页")])]),t._v(" "),_("li",[_("p",[t._v("用户在相应的页面中触发的行为")])])]),t._v(" "),_("p",[t._v("统计这些数据是有意义的，比如我们知道了用户来源的渠道，可以促进产品的推广，知道用户在每一个页面停留的时间，可以针对停留较长的页面，增加广告推送等等。")]),t._v(" "),_("h3",{attrs:{id:"异常监控"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#异常监控"}},[t._v("#")]),t._v(" 异常监控")]),t._v(" "),_("p",[t._v("由于产品的前端代码在执行过程中也会发生异常，因此需要引入异常监控。及时的上报异常情况，可以避免线上故障的发上。虽然大部分异常可以通过 try catch 的方式捕获，但是比如内存泄漏以及其他偶现的异常难以捕获。")]),t._v(" "),_("p",[t._v("常见的需要监控的异常包括：")]),t._v(" "),_("ol",[_("li",[_("p",[t._v("Javascript 的异常监控")])]),t._v(" "),_("li",[_("p",[t._v("样式丢失的异常监控")])])]),t._v(" "),_("h3",{attrs:{id:"性能监控"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#性能监控"}},[t._v("#")]),t._v(" 性能监控")]),t._v(" "),_("p",[t._v("性能监控：监听前端的性能")]),t._v(" "),_("p",[t._v("常见的性能监控项包括：")]),t._v(" "),_("ol",[_("li",[_("p",[t._v("不同用户，不同机型和不同系统下的首屏加载时间")])]),t._v(" "),_("li",[_("p",[t._v("白屏时间")])]),t._v(" "),_("li",[_("p",[t._v("http 等请求的响应时间")])]),t._v(" "),_("li",[_("p",[t._v("静态资源整体下载时间")])]),t._v(" "),_("li",[_("p",[t._v("页面渲染时间")])]),t._v(" "),_("li",[_("p",[t._v("页面交互动画完成时间")])])]),t._v(" "),_("p",[t._v("这些性能监控的结果，可以展示前端性能的好坏，根据性能监测的结果可以进一步的去优化前端性能，比如兼容低版本浏览器的动画效果，加快首屏加载等等。")]),t._v(" "),_("p",[t._v("参考地址："),_("a",{attrs:{href:"https://www.cnblogs.com/haishen/p/12018095.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.cnblogs.com/haishen/p/12018095.html"),_("OutboundLink")],1)]),t._v(" "),_("hr"),t._v(" "),_("h2",{attrs:{id:"前端埋点"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#前端埋点"}},[t._v("#")]),t._v(" 前端埋点")]),t._v(" "),_("p",[t._v("前端埋点种类：")]),t._v(" "),_("ol",[_("li",[_("p",[t._v("代码埋点（手动埋点）")])]),t._v(" "),_("li",[_("p",[t._v("可视化埋点")])]),t._v(" "),_("li",[_("p",[t._v("无埋点")])])]),t._v(" "),_("h3",{attrs:{id:"_1-代码埋点-手动埋点"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-代码埋点-手动埋点"}},[t._v("#")]),t._v(" 1.代码埋点（手动埋点）")]),t._v(" "),_("p",[t._v("手动埋点，也叫代码埋点，即纯手动写代码，调用埋点 SDK 的函数，在需要埋点的业务逻辑功能位置调用接口，上报埋点数据，像友盟、百度统计等第三方数据统计服务商大都采用这种方案。")]),t._v(" "),_("p",[t._v("手动埋点让使用者可以方便地设置自定义属性、自定义事件；所以当你需要深入下钻，并精细化自定义分析时，比较适合使用手动埋点。")]),t._v(" "),_("p",[t._v("手动埋点的缺陷就是，项目工程量大，需要埋点的位置太多，而且需要产品开发运营之间相互反复沟通，容易出现手动差错，如果错误，重新埋点的成本也很高。这会导致整个数据收集周期变的很长，收集成本变的很高，而且效率很低。因为手动埋点需要开发人员完成，所以每次有埋点更新，或者漏埋点，都需要重新走上线发布流程，更新成本也高，对线上系统稳定性也有一定危害。")]),t._v(" "),_("h3",{attrs:{id:"_2-可视化埋点"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-可视化埋点"}},[t._v("#")]),t._v(" 2.可视化埋点")]),t._v(" "),_("p",[t._v("通过可视化交互的手段，代替上述的代码埋点。将业务代码和埋点代码分离，提供一个可视化交互的页面，输入为业务代码，通过这个可视化系统，可以在业务代码中自定义的增加埋点事件等等，最后输出的代码耦合了业务代码和埋点代码。缺点就是可以埋点的控件有限，不能手动定制。")]),t._v(" "),_("p",[t._v("可视化埋点听起来比较高大上，实际上跟代码埋点还是区别不大。也就是用一个系统来实现手动插入代码埋点的过程。比如国外比较早做可视化的是 Mixpanel，国内较早支持可视化埋点的有 TalkingData、诸葛 IO，2017 年腾讯的 MTA 也宣布支持可视化埋点；相比于手动埋点更新困难，埋点成本高的问题，可视化埋点优化了移动运营中数据采集的流程，能够支持产品运营随时调整埋点，无需再走发版流程，直接把配置结果推入到前端，数据采集流程更简化，也更方便产品的迭代。")]),t._v(" "),_("p",[t._v("可视化埋点中多数基于 Xpath 的方案，XPath 是一门在 XML 文档中查找信息的语言，XPath 可用来在 XML 文档中对元素和属性进行遍历。")]),t._v(" "),_("h3",{attrs:{id:"_3-无埋点"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-无埋点"}},[t._v("#")]),t._v(" 3.无埋点")]),t._v(" "),_("p",[t._v("无埋点则是前端自动采集全部事件，上报埋点数据，由后端来过滤和计算出有用的数据。优点是前端只要一次加载埋点脚本，缺点是流量和采集的数据过于庞大，服务器性能压力山大。")]),t._v(" "),_("p",[t._v("采用无埋点技术的有主流的 GrowingIO、神策。")])])}),[],!1,null,null,null);v.default=i.exports}}]);