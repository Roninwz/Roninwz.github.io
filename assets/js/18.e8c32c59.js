(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{1014:function(t,a,s){"use strict";s.r(a);var e=s(14),o=Object(e.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"axios"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#axios"}},[t._v("#")]),t._v(" axios")]),t._v(" "),e("h3",{attrs:{id:"axios-取消请求"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#axios-取消请求"}},[t._v("#")]),t._v(" axios 取消请求")]),t._v(" "),e("p",[t._v("两种取消请求的方式:")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("通过 axios.CancelToken.source 生成取消令牌 token 和取消方法 cancel")])]),t._v(" "),e("li",[e("p",[t._v("通过 axios.CancelToken 构造函数生成取消函数")])])]),t._v(" "),e("blockquote",[e("p",[t._v("参考："),e("a",{attrs:{href:"https://segmentfault.com/a/1190000021290514",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://segmentfault.com/a/1190000021290514"),e("OutboundLink")],1)])]),t._v(" "),e("h3",{attrs:{id:"axios-内部的运作流程图"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#axios-内部的运作流程图"}},[t._v("#")]),t._v(" axios 内部的运作流程图")]),t._v(" "),e("p",[e("img",{attrs:{src:s(557),alt:"image"}})]),t._v(" "),e("h3",{attrs:{id:"axios-源码分析"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#axios-源码分析"}},[t._v("#")]),t._v(" axios 源码分析")]),t._v(" "),e("p",[t._v("源码目录：")]),t._v(" "),e("p",[e("img",{attrs:{src:s(558),alt:"image"}})]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/ronffy/axios-tutorial",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/ronffy/axios-tutorial"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/266670598",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://zhuanlan.zhihu.com/p/266670598"),e("OutboundLink")],1)]),t._v(" "),e("h3",{attrs:{id:"axios-和-fetch-区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#axios-和-fetch-区别"}},[t._v("#")]),t._v(" axios 和 fetch 区别")]),t._v(" "),e("ol",[e("li",[t._v("浏览器原生支持")])]),t._v(" "),e("p",[t._v("Fetch 唯一碾压 Axios 的一点就是现代浏览器的原生支持。")]),t._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[t._v("JSON 数据自动转换")])]),t._v(" "),e("p",[t._v("Axios 自动将数据转换为 JSON")]),t._v(" "),e("p",[t._v("fetch 手动完成")]),t._v(" "),e("ol",{attrs:{start:"3"}},[e("li",[t._v("拦截器")])]),t._v(" "),e("p",[t._v("Axios 自带请求拦截器和响应拦截器")]),t._v(" "),e("p",[t._v("Fetch 实现拦截器需要重写全局 Fetch 方法")]),t._v(" "),e("h3",{attrs:{id:"_35-1-axios-和-ajax-区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_35-1-axios-和-ajax-区别"}},[t._v("#")]),t._v(" 35.1 axios 和 ajax 区别")]),t._v(" "),e("ul",[e("li",[t._v("ajax:异步请求，是一种无需再重新加载整个网页的情况下，能够更新部分网页的技术")]),t._v(" "),e("li",[t._v("axios:用于浏览器和 node.js 的基于 promise 的 HTTP 客户端")]),t._v(" "),e("li",[t._v("ajax：\n"),e("blockquote",[e("p",[t._v("本身是针对 MVC 的编程,不符合现在前端 MVVM 的浪潮\n基于原生的 XHR 开发，XHR 本身的架构不清晰，已经有了 fetch 的替代方案\nJQuery 整个项目太大，单纯使用 ajax 却要引入整个 JQuery 非常的不合理（采取个性化打包的方案又不能享受 CDN 服务")])])]),t._v(" "),e("li",[t._v("axios\n"),e("blockquote",[e("p",[t._v("从 node.js 创建 http 请求\n支持 Promise API\n客户端支持防止 CSRF\n提供了一些并发请求的接口（重要，方便了很多的操作）")])])])])])}),[],!1,null,null,null);a.default=o.exports},557:function(t,a,s){t.exports=s.p+"assets/img/axios_process.b0c59c2b.png"},558:function(t,a,s){t.exports=s.p+"assets/img/axios_catalogue.2ee05bbc.png"}}]);