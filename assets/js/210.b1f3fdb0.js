(window.webpackJsonp=window.webpackJsonp||[]).push([[210],{674:function(t,e,a){"use strict";a.r(e);var r=a(24),n=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"lerna"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lerna"}},[t._v("#")]),t._v(" lerna")]),t._v(" "),a("h3",{attrs:{id:"lerna-简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lerna-简介"}},[t._v("#")]),t._v(" lerna 简介")]),t._v(" "),a("blockquote",[a("p",[t._v("Lerna 是一个管理工具，用于管理包含多个软件包（package）的 JavaScript 项目。")])]),t._v(" "),a("blockquote",[a("p",[t._v("网址："),a("a",{attrs:{href:"https://lernajs.bootcss.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://lernajs.bootcss.com/"),a("OutboundLink")],1)])]),t._v(" "),a("h3",{attrs:{id:"lerna-使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lerna-使用"}},[t._v("#")]),t._v(" lerna 使用")]),t._v(" "),a("ul",[a("li",[t._v("1.安装")])]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("npm install lerna -g")])])]),t._v(" "),a("ul",[a("li",[t._v("2.流程")])]),t._v(" "),a("blockquote",[a("p",[t._v("初始化项目->提交代码->发布")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("3.发布 npm 包操作步骤")]),t._v(" "),a("ol",[a("li",[t._v("先在 gitee 上建一个 git 仓库，git clone 下来")]),t._v(" "),a("li",[t._v("lerna init 初始化项目，然后在 package 下建立 roninwz-demo1 文件夹，运行 npm init -y")]),t._v(" "),a("li",[t._v("修改根目录下 package.json，配置 repository"),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"repository"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"url"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://gitee.com/roninwz/lerna-demo.git"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])])]),t._v(" "),a("li",[t._v("提交代码到 git")]),t._v(" "),a("li",[t._v("nrm 切换源到 npm，"),a("code",[t._v("nrm ls")]),t._v(" "),a("code",[t._v("nrm use npm")])]),t._v(" "),a("li",[t._v("npm login 输入用户名密码，（刚注册得账户需 npm 官网验证邮箱）")]),t._v(" "),a("li",[t._v("lerna publish")])])])]),t._v(" "),a("h3",{attrs:{id:"lerna-命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lerna-命令"}},[t._v("#")]),t._v(" lerna 命令")]),t._v(" "),a("ol",[a("li",[t._v("lerna init (初始化项目)")])]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("lerna init")])])]),t._v(" "),a("blockquote",[a("p",[t._v("参数：--independent/-i – 使用独立的 版本控制模式。")])]),t._v(" "),a("p",[t._v("两种模式：")]),t._v(" "),a("p",[t._v("(1) 默认为固定模式(Fixed mode)")]),t._v(" "),a("blockquote",[a("p",[t._v("固定模式中，packages 下的所有包共用一个版本号(version)，会自动将所有的包绑定到一个版本号上(该版本号也就是 lerna.json 中的 version 字段)，所以任意一个包发生了更新，这个共用的版本号就会发生改变。")])]),t._v(" "),a("p",[t._v("(2) -i 独立模式(Fixed mode)")]),t._v(" "),a("blockquote",[a("p",[t._v("独立模式允许每一个包有一个独立的版本号，在使用 lerna publish 命令时，可以为每个包单独制定具体的操作，同时可以只更新某一个包的版本号。此种模式时，lerna.json 中的 version 字段指定为 independent 即可。")])]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("lerna bootstrap")])]),t._v(" "),a("blockquote",[a("p",[t._v("为所有项目安装依赖，类似于 npm/yarn i")])]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[t._v("lerna import pathToRepo")])]),t._v(" "),a("blockquote",[a("p",[t._v("将本地路径 pathToRepo 中的软件包导入（import） packages/directory-name 中并提交 commit。")])]),t._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[t._v("lerna publish 发布")])]),t._v(" "),a("p",[a("code",[t._v("lerna publish --conventional-commits")]),t._v(" 会根据提交的 git commit 信息生成 change log")]),t._v(" "),a("ol",{attrs:{start:"5"}},[a("li",[t._v("lerna changed")])]),t._v(" "),a("blockquote",[a("p",[t._v("检查自上次发布以来哪些软件包被修改过。")])]),t._v(" "),a("ol",{attrs:{start:"6"}},[a("li",[t._v("lerna diff package?")])]),t._v(" "),a("blockquote",[a("p",[t._v("列出所有或某个软件包自上次发布以来的修改情况。")])]),t._v(" "),a("ol",{attrs:{start:"7"}},[a("li",[t._v("lerna run script")])]),t._v(" "),a("blockquote",[a("p",[t._v("在每一个包含 script 脚本的软件包中运行此 npm 脚本。")])]),t._v(" "),a("ol",{attrs:{start:"8"}},[a("li",[t._v("lerna ls(列出当前 Lerna 仓库中的所有公共软件包)")])]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("lerna ls")])])]),t._v(" "),a("ol",{attrs:{start:"9"}},[a("li",[t._v("lerna clean")])]),t._v(" "),a("p",[t._v("删除所有包的 node_modules 目录")]),t._v(" "),a("ul",[a("li",[t._v("参考链接")])]),t._v(" "),a("blockquote",[a("p",[t._v("lerna 管理前端 packages 的最佳实践 "),a("a",{attrs:{href:"http://www.sosout.com/2018/07/21/lerna-repo.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://www.sosout.com/2018/07/21/lerna-repo.html"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);e.default=n.exports}}]);