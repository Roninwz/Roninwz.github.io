(window.webpackJsonp=window.webpackJsonp||[]).push([[217],{670:function(t,a,v){"use strict";v.r(a);var r=v(20),s=Object(r.a)({},(function(){var t=this,a=t.$createElement,v=t._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h2",{attrs:{id:"变量"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#变量"}},[t._v("#")]),t._v(" 变量")]),t._v(" "),v("h2",{attrs:{id:"变量声明方式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#变量声明方式"}},[t._v("#")]),t._v(" 变量声明方式")]),t._v(" "),v("h3",{attrs:{id:"var"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#var"}},[t._v("#")]),t._v(" var")]),t._v(" "),v("h3",{attrs:{id:"let"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#let"}},[t._v("#")]),t._v(" let")]),t._v(" "),v("h3",{attrs:{id:"const"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#const"}},[t._v("#")]),t._v(" const")]),t._v(" "),v("h3",{attrs:{id:"var、let和const区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#var、let和const区别"}},[t._v("#")]),t._v(" var、let和const区别")]),t._v(" "),v("h2",{attrs:{id:"声明提升"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#声明提升"}},[t._v("#")]),t._v(" 声明提升")]),t._v(" "),v("p",[t._v("函数声明提升的优先级是高于变量声明的")]),t._v(" "),v("p",[t._v("这里的优先级指的是：同名的变量和函数中，函数先提升，再遇到同名的变量或函数，提升都将被编译器忽略。")]),t._v(" "),v("p",[t._v("JavaScript 中，函数及变量的声明都将被提升到函数的最顶部。")]),t._v(" "),v("p",[t._v("JavaScript 中，变量可以在使用后声明，也就是变量可以先使用再声明。")]),t._v(" "),v("p",[t._v("JavaScript 只有声明的变量会提升，初始化的不会。")]),t._v(" "),v("h3",{attrs:{id:"变量提升和函数声明提升"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#变量提升和函数声明提升"}},[t._v("#")]),t._v(" 变量提升和函数声明提升")]),t._v(" "),v("p",[t._v("注意点：JavaScript 严格模式(strict mode)不允许使用未声明的变量。")]),t._v(" "),v("p",[t._v("变量的声明和函数的声明提升，提升的时机发生在预解析过程中。")]),t._v(" "),v("p",[t._v("预解析过程也就是创建 AO（Activation Object） 的过程。")]),t._v(" "),v("p",[t._v("创建AO过程：")]),t._v(" "),v("ol",[v("li",[v("p",[t._v("创建 AO 对象。")])]),t._v(" "),v("li",[v("p",[t._v("将形参和函数内变量声明作为对象的属性名，属性值统一为 undefined。")])]),t._v(" "),v("li",[v("p",[t._v("将实参赋值给形参。")])]),t._v(" "),v("li",[v("p",[t._v("找函数内的函数声明作为对象的属性名，属性值为函数体。")])])]),t._v(" "),v("h3",{attrs:{id:"变量提升"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#变量提升"}},[t._v("#")]),t._v(" 变量提升")]),t._v(" "),v("p",[t._v("原则上变量应该先声明后使用，但是程序员小白常常忘记声明就使用了变量，这样做 js 代码在执行的时候不报错，只是返回了一个 undefined。这种情况就是变量提升。")]),t._v(" "),v("p",[t._v("计算机执行的时候会把未声明就使用的变量隐式的放到代码的最顶端。需要注意的是变量虽然发生了提升，但是给变量赋的值是不会随之提升的，所以就会得到结果 undefined。")]),t._v(" "),v("h3",{attrs:{id:"函数提升"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#函数提升"}},[t._v("#")]),t._v(" 函数提升")]),t._v(" "),v("p",[t._v("与变量提升的意思差不多，先使用函数，后再声明函数，这种违背逻辑的事情在 JavaScript 中是允许的，这门语言就是这么灵活。")]),t._v(" "),v("p",[t._v("与变量提升不同的是，函数的返回值也会随之提升，所以你会发现在script标签中的任何地方都能调用函数并且使用函数的返回值。")])])}),[],!1,null,null,null);a.default=s.exports}}]);