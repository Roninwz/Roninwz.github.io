(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{430:function(a,t,s){a.exports=s.p+"assets/img/sort10.3cb6a28a.png"},538:function(a,t,s){"use strict";s.r(t);var n=s(24),r=Object(n.a)({},(function(){var a=this,t=a.$createElement,n=a._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[n("h2",{attrs:{id:"排序算法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#排序算法"}},[a._v("#")]),a._v(" 排序算法")]),a._v(" "),n("h3",{attrs:{id:"名称解释"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#名称解释"}},[a._v("#")]),a._v(" 名称解释")]),a._v(" "),n("ul",[n("li",[n("p",[a._v("稳定：如果a原本在b前面，而a=b，排序之后a仍然在b的前面；")])]),a._v(" "),n("li",[n("p",[a._v("不稳定：如果a原本在b的前面，而a=b，排序之后a可能会出现在b的后面；")])]),a._v(" "),n("li",[n("p",[a._v("内排序：所有排序操作都在内存中完成；")])]),a._v(" "),n("li",[n("p",[a._v("外排序：由于数据太大，因此把数据放在磁盘中，而排序通过磁盘和内存的数据传输才能进行；")])]),a._v(" "),n("li",[n("p",[a._v("时间复杂度: 一个算法执行所耗费的时间。")])]),a._v(" "),n("li",[n("p",[a._v("空间复杂度: 运行完一个程序所需内存的大小。")])])]),a._v(" "),n("h3",{attrs:{id:"排序算法前置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#排序算法前置"}},[a._v("#")]),a._v(" 排序算法前置")]),a._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//先将交换元素部分抽象出来")]),a._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[a._v("swap")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[a._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("array")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" temp "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" array"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n  array"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" array"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n  array"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" temp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br")])]),n("h3",{attrs:{id:"十大排序算法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#十大排序算法"}},[a._v("#")]),a._v(" 十大排序算法")]),a._v(" "),n("p",[n("img",{attrs:{src:s(430),alt:"image"}})]),a._v(" "),n("p",[a._v("图片名词解释：")]),a._v(" "),n("ul",[n("li",[a._v("n: 数据规模")]),a._v(" "),n("li",[a._v("k:“桶”的个数")]),a._v(" "),n("li",[a._v("In-place: 占用常数内存，不占用额外内存")]),a._v(" "),n("li",[a._v("Out-place: 占用额外内存")])])])}),[],!1,null,null,null);t.default=r.exports}}]);