(window.webpackJsonp=window.webpackJsonp||[]).push([[255],{695:function(t,e,r){"use strict";r.r(e);var a=r(19),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"vue3-新特性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#vue3-新特性"}},[t._v("#")]),t._v(" vue3 新特性")]),t._v(" "),r("h3",{attrs:{id:"tree-shaking-的支持"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#tree-shaking-的支持"}},[t._v("#")]),t._v(" Tree-Shaking 的支持")]),t._v(" "),r("p",[t._v("Tree shaking 是一种通过清除多余代码方式来优化项目打包体积的技术，专业术语叫 Dead code elimination")]),t._v(" "),r("p",[t._v("Tree shaking 是基于 ES6 模板语法（import 与 exports），主要是借助 ES6 模块的静态编译思想，在编译时就能确定模块的依赖关系，以及输入和输出的变量")]),t._v(" "),r("p",[t._v("Tree shaking 无非就是做了两件事：")]),t._v(" "),r("ol",[r("li",[r("p",[t._v("编译阶段利用 ES6 Module 判断哪些模块已经加载")])]),t._v(" "),r("li",[r("p",[t._v("判断那些模块和变量未被使用或者引用，进而删除对应代码")])])]),t._v(" "),r("p",[t._v("Tree-Shaking 原理："),r("a",{attrs:{href:"https://juejin.cn/post/6844903544756109319",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://juejin.cn/post/6844903544756109319"),r("OutboundLink")],1)]),t._v(" "),r("h3",{attrs:{id:"组合式-api-composition-api"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#组合式-api-composition-api"}},[t._v("#")]),t._v(" 组合式 API (Composition API)")]),t._v(" "),r("p",[t._v("优点：")]),t._v(" "),r("ol",[r("li",[r("p",[t._v("暴露给模板的 property 来源十分清晰，因为它们都是被组合逻辑函数返回的值。")])]),t._v(" "),r("li",[r("p",[t._v("不存在命名空间冲突，可以通过解构任意命名")])]),t._v(" "),r("li",[r("p",[t._v("不再需要仅为逻辑复用而创建组件实例")])]),t._v(" "),r("li",[r("p",[t._v("仅依赖它的参数和 Vue 全局导出的 API，而不是依赖其微妙的 this 上下文")])])]),t._v(" "),r("p",[t._v("参考："),r("a",{attrs:{href:"https://segmentfault.com/a/1190000023016699",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://segmentfault.com/a/1190000023016699"),r("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=n.exports}}]);