(window.webpackJsonp=window.webpackJsonp||[]).push([[321],{789:function(e,t,a){"use strict";a.r(t);var s=a(24),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h2",{attrs:{id:"vue-原理汇总"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue-原理汇总"}},[e._v("#")]),e._v(" vue 原理汇总")]),e._v(" "),a("h3",{attrs:{id:"keep-alive"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#keep-alive"}},[e._v("#")]),e._v(" keep-alive")]),e._v(" "),a("p",[e._v("使用了 LRU 的缓存策略。(Least Recently Used 最近最少使用)")]),e._v(" "),a("p",[e._v("LRU 的核心思想是如果数据最近被访问过，那么将来被访问的几率也更高，优先淘汰最近没有被访问到的数据")]),e._v(" "),a("h3",{attrs:{id:"key-的作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#key-的作用"}},[e._v("#")]),e._v(" key 的作用")]),e._v(" "),a("p",[e._v("key 是给每一个 vnode 的唯一 id,可以依靠 key,更准确, 更快的拿到 oldVnode 中对应的 vnode 节点。")]),e._v(" "),a("ol",[a("li",[e._v("更准确：避免就地复用")])]),e._v(" "),a("p",[e._v("没有 key 时就地复用的影响：可能不会产生过渡效果，或者在某些节点有绑定数据（表单）状态，会出现状态错位")]),e._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[e._v("更快：利用 key 的唯一性生成 map 对象来获取对应节点，比遍历方式更快")])]),e._v(" "),a("blockquote",[a("p",[e._v("参考："),a("a",{attrs:{href:"https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/1",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/1"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=r.exports}}]);