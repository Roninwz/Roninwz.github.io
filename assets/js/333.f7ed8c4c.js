(window.webpackJsonp=window.webpackJsonp||[]).push([[333],{863:function(e,t,a){"use strict";a.r(t);var r=a(14),v=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h2",{attrs:{id:"vue2-0-生命周期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue2-0-生命周期"}},[e._v("#")]),e._v(" vue2.0 生命周期")]),e._v(" "),a("p",[e._v("Vue 实例有一个完整的生命周期，也就是从开始创建、初始化数据、编译模版、挂载 Dom -> 渲染、更新 -> 渲染、卸载等一系列过程，我们称这是 Vue 的生命周期。")]),e._v(" "),a("h3",{attrs:{id:"生命周期钩子函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#生命周期钩子函数"}},[e._v("#")]),e._v(" 生命周期钩子函数")]),e._v(" "),a("ol",[a("li",[a("p",[e._v("beforeCreate：组件刚被创建，组件属性计算之前")])]),e._v(" "),a("li",[a("p",[e._v("created：组件实例创建完成，属性已绑定， 但真实 dom 还没有生成，$el 还不可用,但是 data 和 method 可用")])]),e._v(" "),a("li",[a("p",[e._v("beforeMount：此时已经完成了模板的编译，在页面挂载开始之前被调用, 相关的 render 函数首次被调用")])]),e._v(" "),a("li",[a("p",[e._v("mounted：已经将编译好的模板，挂载到了页面指定的容器中显示,可操作 DOM（最早）")])]),e._v(" "),a("li",[a("p",[e._v("beforeUpdate：状态更新之前执行此函数，此时 data 中的状态值是最新的，但是界面上显示的 数据还是旧的，此时还没有开始重新渲染 DOM 节点")])]),e._v(" "),a("li",[a("p",[e._v("updated：实例更新完毕之后调用此函数，此时 data 中的状态值 和 界面上显示的数据，都已经完成了更新，界面已经被重新渲染好了！")])]),e._v(" "),a("li",[a("p",[e._v("beforeDestroy：实例销毁之前调用。在这一步，实例（data,methods,过滤器，指令）仍然完全可用。")]),e._v(" "),a("blockquote",[a("p",[e._v("使用场景：(日期在我点击查询的时候要存储,刷新就读内存,但是我点击其他页面再进来的时候,这个内存要清空)")])])]),e._v(" "),a("li",[a("p",[e._v("destroyed：Vue 实例销毁后调用。调用后，Vue 实例指示的所有东西都会解绑定，所有的事件监听器会被移除，所有的子实例也会被销毁。")])]),e._v(" "),a("li",[a("p",[e._v("activited keep-alive 专属，组件被激活时调用")])]),e._v(" "),a("li",[a("p",[e._v("deactivated keep-alive 专属，组件被销毁时调用")])])]),e._v(" "),a("h3",{attrs:{id:"在哪个钩子函数中调用接口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在哪个钩子函数中调用接口"}},[e._v("#")]),e._v(" 在哪个钩子函数中调用接口")]),e._v(" "),a("p",[e._v("可以在钩子函数 created、beforeMount、mounted 中进行调用，因为在这三个钩子函数中，data 已经创建，可以将服务端端返回的数据进行赋值。但是本人推荐在 created 钩子函数中调用异步请求，因为在 created 钩子函数中调用异步请求有以下优点：")]),e._v(" "),a("p",[e._v("能更快获取到服务端数据，减少页面  loading 时间；\nssr  不支持 beforeMount 、mounted 钩子函数，所以放在 created 中有助于一致性；")]),e._v(" "),a("h3",{attrs:{id:"父子组件生命周期钩子函数执行顺序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#父子组件生命周期钩子函数执行顺序"}},[e._v("#")]),e._v(" 父子组件生命周期钩子函数执行顺序？")]),e._v(" "),a("blockquote",[a("p",[e._v("Vue 的父组件和子组件生命周期钩子函数执行顺序可以归类为以下 4 部分：")])]),e._v(" "),a("ul",[a("li",[a("p",[e._v("加载渲染过程")]),e._v(" "),a("blockquote",[a("p",[e._v("父 beforeCreate -> 父 created -> 父 beforeMount -> 子 beforeCreate -> 子 created -> 子 beforeMount -> 子 mounted -> 父 mounted")])])]),e._v(" "),a("li",[a("p",[e._v("子组件更新过程")]),e._v(" "),a("blockquote",[a("p",[e._v("父 beforeUpdate -> 子 beforeUpdate -> 子 updated -> 父 updated")])])]),e._v(" "),a("li",[a("p",[e._v("父组件更新过程")]),e._v(" "),a("blockquote",[a("p",[e._v("父 beforeUpdate -> 父 updated")])])]),e._v(" "),a("li",[a("p",[e._v("销毁过程")]),e._v(" "),a("blockquote",[a("p",[e._v("父 beforeDestroy -> 子 beforeDestroy -> 子 destroyed -> 父 destroyed")])])])])])}),[],!1,null,null,null);t.default=v.exports}}]);