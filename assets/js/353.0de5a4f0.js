(window.webpackJsonp=window.webpackJsonp||[]).push([[353],{821:function(t,a,s){"use strict";s.r(a);var r=s(24),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"前端-面试题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前端-面试题"}},[t._v("#")]),t._v(" 前端 面试题")]),t._v(" "),s("h3",{attrs:{id:"前端高级面试题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前端高级面试题"}},[t._v("#")]),t._v(" 前端高级面试题")]),t._v(" "),s("h2",{attrs:{id:"微前端面试题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#微前端面试题"}},[t._v("#")]),t._v(" 微前端面试题")]),t._v(" "),s("p",[t._v("微前端是什么, 有哪些特点和优势")]),t._v(" "),s("p",[t._v("微前端实现的主要原理")]),t._v(" "),s("p",[t._v("怎么解决样式隔离")]),t._v(" "),s("p",[t._v("如何解决主应用和子应用的隔离, 用 node.js 实现沙箱机制的原理")]),t._v(" "),s("p",[t._v("主应用修改了路由, 子应用如何感知到")])])}),[],!1,null,null,null);a.default=e.exports}}]);