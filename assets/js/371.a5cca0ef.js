(window.webpackJsonp=window.webpackJsonp||[]).push([[371],{912:function(v,t,e){"use strict";e.r(t);var _=e(14),a=Object(_.a)({},(function(){var v=this,t=v.$createElement,e=v._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("p",[v._v("用法：在下次 DOM 更新循环结束之后执行延迟回调。在修改数据之后立即使用这个方法，获取更新后的 DOM。")]),v._v(" "),e("p",[v._v("触发时机：在同一事件循环中的数据变化后，DOM 完成更新，立即执行 Vue.nextTick()的回调。")]),v._v(" "),e("p",[v._v("执行顺序：同一事件循环中的代码执行完毕 -> DOM 更新 -> nextTick callback 触发")]),v._v(" "),e("p",[v._v("应用场景：需要在视图更新之后，基于新的视图进行操作。")]),v._v(" "),e("p",[v._v("异步说明：Vue 实现响应式并不是数据发生变化之后 DOM 立即变化，而是按一定的策略进行 DOM 的更新。")]),v._v(" "),e("p",[v._v("事件循环：Vue 在修改数据后，视图不会立刻更新，而是等同一事件循环中的所有数据变化完成之后，再统一进行视图更新。")]),v._v(" "),e("h3",{attrs:{id:"原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#原理"}},[v._v("#")]),v._v(" 原理")]),v._v(" "),e("ol",[e("li",[v._v("vue 用异步队列的方式来控制 DOM 更新和 nextTick 回调先后执行")])]),v._v(" "),e("h3",{attrs:{id:"源码分析"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#源码分析"}},[v._v("#")]),v._v(" 源码分析")]),v._v(" "),e("p",[v._v("nextTick 源码主要分为两块：")]),v._v(" "),e("ol",[e("li",[e("p",[v._v("把回调函数放入 callbacks 等待执行")])]),v._v(" "),e("li",[e("p",[v._v("能力检测，根据能力检测以不同方式执行回调队列（降级处理）")])])]),v._v(" "),e("p",[v._v("Vue 在内部对异步队列尝试使用原生的 Promise.then、MutationObserver 和 setImmediate，如果执行环境不支持，则会采用 setTimeout(fn, 0) 代替。")]),v._v(" "),e("p",[v._v("宏任务耗费的时间是大于微任务的，所以在浏览器支持的情况下，优先使用微任务。如果浏览器不支持微任务，使用宏任务；但是，各种宏任务之间也有效率的不同，需要根据浏览器的支持情况，使用不同的宏任务。")]),v._v(" "),e("p",[v._v("将执行函数放到微任务或者宏任务中，事件循环到了微任务或者宏任务，执行函数依次执行 callbacks 中的回调")]),v._v(" "),e("p",[v._v("（执行的优先顺序为 promise.then => MutationObserver => setImmediate => setTimeout）")]),v._v(" "),e("p",[v._v("源码解析：")]),v._v(" "),e("ol",[e("li",[e("p",[v._v("callbacks 用来存储所有需要执行的回调函数")])]),v._v(" "),e("li",[e("p",[v._v("pending 用来标志是否正在执行回调函数")])]),v._v(" "),e("li",[e("p",[v._v("timerFunc 用来触发执行回调函数")])])]),v._v(" "),e("h3",{attrs:{id:"用法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#用法"}},[v._v("#")]),v._v(" 用法")]),v._v(" "),e("p",[v._v("语法："),e("code",[v._v("Vue.nextTick([callback, context])")]),v._v(" 或者"),e("code",[v._v("vm.$nextTick([callback]);")])]),v._v(" "),e("p",[v._v("参数：")]),v._v(" "),e("ol",[e("li",[e("p",[e("code",[v._v("{Function} [callback]")]),v._v("：回调函数，不传时提供 promise 调用")])]),v._v(" "),e("li",[e("p",[e("code",[v._v("{Object} [context]")]),v._v(" 回调函数执行的上下文环境，不传默认是自动绑定到调用它的实例上。")])])]),v._v(" "),e("p",[e("code",[v._v("Vue.nextTick([callback, context]);")]),v._v(" 该方法是全局方法，该方法可接收 2 个参数，分别为回调函数 和 执行回调函数的上下文环境。")]),v._v(" "),e("p",[e("code",[v._v("vm.$nextTick([callback])")]),v._v(" 该方法是实列方法，执行时自动绑定 this 到当前的实列上。")]),v._v(" "),e("p",[v._v("Vue 实例方法"),e("code",[v._v("vm.$nextTick")]),v._v("做了进一步封装，把 context 参数设置成当前 Vue 实例。")]),v._v(" "),e("h3",{attrs:{id:"应用场景"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#应用场景"}},[v._v("#")]),v._v(" 应用场景")]),v._v(" "),e("ol",[e("li",[e("p",[v._v("更改数据后，进行节点 DOM 操作。")])]),v._v(" "),e("li",[e("p",[v._v("在 created 生命周期中进行 DOM 操作。")])])]),v._v(" "),e("h3",{attrs:{id:"mutationobserver"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mutationobserver"}},[v._v("#")]),v._v(" MutationObserver")]),v._v(" "),e("p",[v._v("MutationObserver 是 HTML5 中的新 API，是个用来监视 DOM 变动的接口")]),v._v(" "),e("p",[v._v("能监听一个 DOM 对象上发生的子节点删除、属性修改、文本内容修改等等。")]),v._v(" "),e("p",[v._v("兼容性：IE11 及以上")]),v._v(" "),e("p",[v._v("语法："),e("code",[v._v("var observer = new MutationObserver(callback);")])]),v._v(" "),e("p",[v._v("实例方法：")]),v._v(" "),e("ol",[e("li",[v._v("observe(target, config) 指定所要观察的 DOM 元素，以及要观察的特定变动。")])]),v._v(" "),e("p",[v._v("target：dom 观察目标")]),v._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[e("p",[v._v("disconnect 用来停止观察。发生相应变动时，不再调用回调函数。")])]),v._v(" "),e("li",[e("p",[v._v("takeRecord 用来清除变动记录，即不再处理未处理的变动。")])])]),v._v(" "),e("p",[v._v("特点：")]),v._v(" "),e("ol",[e("li",[e("p",[v._v("它等待所有脚本任务完成后，才会运行，即采用异步方式")])]),v._v(" "),e("li",[e("p",[v._v("它把 DOM 变动记录封装成一个数组进行处理，而不是一条条地个别处理 DOM 变动。")])]),v._v(" "),e("li",[e("p",[v._v("它即可以观察发生在 DOM 节点的所有变动，也可以观察某一类变动")])])]),v._v(" "),e("hr"),v._v(" "),e("blockquote",[e("p",[v._v("参考："),e("a",{attrs:{href:"https://segmentfault.com/a/1190000012861862",target:"_blank",rel:"noopener noreferrer"}},[v._v("https://segmentfault.com/a/1190000012861862"),e("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=a.exports}}]);