(window.webpackJsonp=window.webpackJsonp||[]).push([[409],{945:function(t,s,e){"use strict";e.r(s);var a=e(14),r=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"js-面试题及答案"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#js-面试题及答案"}},[t._v("#")]),t._v(" js 面试题及答案")]),t._v(" "),e("h3",{attrs:{id:"defer-与-async-的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#defer-与-async-的区别"}},[t._v("#")]),t._v(" defer 与 async 的区别")]),t._v(" "),e("ol",[e("li",[t._v("async 属性")])]),t._v(" "),e("p",[t._v("顺序：加载优先顺序，脚本在文档中的顺序不重要，先加载完成先执行")]),t._v(" "),e("p",[t._v("表示后续文档的加载和渲染与 js 脚本的加载和执行是并行进行的，即异步执行")]),t._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[t._v("defer 属性")])]),t._v(" "),e("p",[t._v("顺序：文档顺序，")]),t._v(" "),e("p",[t._v("加载后续文档的过程和 js 脚本的加载(此时仅加载不执行)是并行进行的(异步)，js 脚本的执行需要等到文档所有元素解析完成之后，DOMContentLoaded 事件触发执行之前")])])}),[],!1,null,null,null);s.default=r.exports}}]);