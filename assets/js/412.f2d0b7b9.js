(window.webpackJsonp=window.webpackJsonp||[]).push([[412],{948:function(t,p,e){"use strict";e.r(p);var v=e(14),i=Object(v.a)({},(function(){var t=this,p=t.$createElement,e=t._self._c||p;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"typescript"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#typescript"}},[t._v("#")]),t._v(" typescript")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("typescript 和 javascript 区别")])]),t._v(" "),e("li",[e("p",[t._v("typescript 你都用过哪些类型")])]),t._v(" "),e("li",[e("p",[t._v("typescript 中 type 和 interface 的区别")])]),t._v(" "),e("li",[e("p",[t._v("Never 和 void 的区别")])]),t._v(" "),e("li",[e("p",[t._v("讲讲函数重载？")])]),t._v(" "),e("li",[e("p",[t._v("Ts 有什么优势")])]),t._v(" "),e("li",[e("p",[t._v("typescript 定义一个对象应该如何定义，如果定义对象的 key 必须是字符串，应该如何定义")])]),t._v(" "),e("li",[e("p",[t._v("typescript 装饰器有了解么，类装饰器的 this 是如何处理的")])]),t._v(" "),e("li",[e("p",[t._v("js 和 ts 混合开发有没有最佳实践")])])]),t._v(" "),e("p",[t._v("TypeScript 中 const 和 readonly 的区别？枚举和常量枚举的区别？接口和类型别名的区别？")]),t._v(" "),e("p",[t._v("TypeScript 中 any 类型的作用是什么？")]),t._v(" "),e("p",[t._v("TypeScript 中 any、never、unknown 和 void 有什么区别？")]),t._v(" "),e("p",[t._v("TypeScript 中 interface 可以给 Function / Array / Class（Indexable）做声明吗？")]),t._v(" "),e("p",[t._v("TypeScript 中可以使用 String、Number、Boolean、Symbol、Object 等给类型做声明吗？")]),t._v(" "),e("p",[t._v("TypeScript 中的 this 和 JavaScript 中的 this 有什么差异？")]),t._v(" "),e("p",[t._v("TypeScript 中使用 Unions 时有哪些注意事项？")]),t._v(" "),e("p",[t._v("TypeScript 如何设计 Class 的声明？")]),t._v(" "),e("p",[t._v("TypeScript 中如何联合枚举类型的 Key?")]),t._v(" "),e("p",[t._v("TypeScript 中"),e("code",[t._v("?.、??、!.、_、**")]),t._v("等符号的含义？")]),t._v(" "),e("p",[t._v("TypeScript 中预定义的有条件类型有哪些？")]),t._v(" "),e("p",[t._v("简单介绍一下 TypeScript 模块的加载机制？")]),t._v(" "),e("p",[t._v("简单聊聊你对 TypeScript 类型兼容性的理解？抗变、双变、协变和逆变的简单理解？")]),t._v(" "),e("p",[t._v("TypeScript 中对象展开会有什么副作用吗？")]),t._v(" "),e("p",[t._v("TypeScript 中 interface、type、enum 声明有作用域的功能吗？")]),t._v(" "),e("p",[t._v("TypeScript 中同名的 interface 或者同名的 interface 和 class 可以合并吗？")]),t._v(" "),e("p",[t._v("如何使 TypeScript 项目引入并识别编译为 JavaScript 的 npm 库包？")]),t._v(" "),e("p",[t._v("TypeScript 的 tsconfig.json 中有哪些配置项信息？")]),t._v(" "),e("p",[t._v("TypeScript 中如何设置模块导入的路径别名？")]),t._v(" "),e("h2",{attrs:{id:"typescript-面试题及答案"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#typescript-面试题及答案"}},[t._v("#")]),t._v(" typescript 面试题及答案")]),t._v(" "),e("h3",{attrs:{id:"_1-typescript-和-javascript-区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-typescript-和-javascript-区别"}},[t._v("#")]),t._v(" 1.typescript 和 javascript 区别")]),t._v(" "),e("ul",[e("li",[t._v("TypeScript 是 JavaScript 的超集，扩展了 JavaScript 的语法，因此现有的 JavaScript 代码可与 TypeScript 一起工作无需任何修改，")]),t._v(" "),e("li",[t._v("TypeScript 通过类型注解提供编译时的静态类型检查。")]),t._v(" "),e("li",[t._v("TypeScript 可处理已有的 JavaScript 代码，并只对其中的 TypeScript 代码进行编译。")])]),t._v(" "),e("h3",{attrs:{id:"_2-typescript-你都用过哪些类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-typescript-你都用过哪些类型"}},[t._v("#")]),t._v(" 2.typescript 你都用过哪些类型")]),t._v(" "),e("h3",{attrs:{id:"_3-typescript-中-type-和-interface-的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-typescript-中-type-和-interface-的区别"}},[t._v("#")]),t._v(" 3.typescript 中 type 和 interface 的区别")]),t._v(" "),e("p",[t._v("在 ts 中，定义类型由两种方式：接口（interface）和类型别名（type alias）")]),t._v(" "),e("p",[t._v("相同点：")]),t._v(" "),e("ol",[e("li",[t._v("都可以描述一个对象或者函数")])]),t._v(" "),e("p",[t._v("区别：")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("interface 只能定义对象类型，type 声明的方式可以定义组合类型，交叉类型和原始类型")])]),t._v(" "),e("li",[e("p",[t._v("interface 方式可以实现接口的 extends/implements，而 type 不行")])]),t._v(" "),e("li",[e("p",[t._v("interface 可以声明合并，但是 type 不行")])])]),t._v(" "),e("h3",{attrs:{id:"_4-typescript-认识"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-typescript-认识"}},[t._v("#")]),t._v(" 4.typescript 认识")]),t._v(" "),e("ul",[e("li",[t._v("微软开发")]),t._v(" "),e("li",[t._v("开源")]),t._v(" "),e("li",[t._v("js 的超集")]),t._v(" "),e("li",[t._v("扩展了 js 的语法")]),t._v(" "),e("li",[t._v("浏览器不能直接解析")]),t._v(" "),e("li",[t._v("编写代码更加规范，增加了类型校验")]),t._v(" "),e("li",[t._v("代码更有利于维护")]),t._v(" "),e("li",[t._v("写 ts 代码必须指定类型")])])])}),[],!1,null,null,null);p.default=i.exports}}]);