(window.webpackJsonp=window.webpackJsonp||[]).push([[423],{892:function(e,o,s){"use strict";s.r(o);var t=s(20),a=Object(t.a)({},(function(){var e=this,o=e.$createElement,s=e._self._c||o;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h2",{attrs:{id:"前端存储"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前端存储"}},[e._v("#")]),e._v(" 前端存储")]),e._v(" "),s("h3",{attrs:{id:"cookie"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cookie"}},[e._v("#")]),e._v(" cookie")]),e._v(" "),s("ul",[s("li",[e._v("Cookie定义：")])]),e._v(" "),s("blockquote",[s("p",[e._v("中文名称为'小型文本文件'或'小甜饼'，指某些网站为了辨识用户身份而存储在用户本地终端上的数据（通常name和value经过编码）。\nCookie组成：")])]),e._v(" "),s("ul",[s("li",[e._v("Cookie组成：")])]),e._v(" "),s("p",[e._v("Cookie: [name][value][domain][path][expires][httpOnly][secure]")]),e._v(" "),s("blockquote",[s("p",[e._v("通常通过JS设置Cookie为以下形式。当然，最好的方式是通过一个函数来设置。")])]),e._v(" "),s("p",[s("code",[e._v("document.cookie = 'name=kk; domain=localhost; path=/; expires= Mon Nov 06 2017 01:32:07 GMT+0800 (CST)'")])]),e._v(" "),s("blockquote",[s("p",[e._v("name, value: 是Cookie的名称和值。Cookie的name和value必须经过url编码。在JS中可以通过window.encodeURIComponent方法来对name和value进行编码。同时，在写cookie的时候要注意，cookie的名称是不区分大小写的。所以myCookie和MyCookie被认为是同一个cookie。但是在实际开发过程中，最好区分大小写。")])]),e._v(" "),s("blockquote",[s("p",[e._v("domain: Cookie对于哪个域是有效的。所以向该域发出的请求都会包含Cookie信息。设置Cookie时，如果不指定Cookie的值，默认就是本域名。如我在本地通过Node.js起服务器时，Cookie的domain为domain=localhost。")])]),e._v(" "),s("p",[e._v("子域可以获取当前域（父域）的cookie，但是当前域（父域）不能获取子域的cookie。比如说，当前域为a.com，在a.com设置了cookie。那么其子域b.a.com可以获取a.com的cookie。但是如果在b.a.com设置的cookie，在a.com域名下不能获取到b.a.com下的cookie。")]),e._v(" "),s("blockquote",[s("p",[e._v("path: 对于指定域中的那个路径，应该向服务器发送cookie。默认情况下，如果不设置Cookie的path时，默认路径为/。比如说，在a.com/profile路径下设置的cookie，那么在访问此路径的时候才会发送cookie，在访问a.com时不会发送cookie。")])]),e._v(" "),s("blockquote",[s("p",[e._v("如果需要跨路径获取Cookie值，可以使用隐藏的iframe实现，但是必须是同源的。")])]),e._v(" "),s("blockquote",[s("p",[e._v("expires：表示Cookie何时被删除的时间戳。这个时间戳是GMT格式的日期（Wdy, DD-Mon-YYYY HH:MM:SS GMT）。如果设置成以前的时间，则Cookie会被立即删除。如果设置的是将来的某个时间，那么即使关闭浏览器，cookie仍然保持在用户的电脑上。expires字段的设置与否，会把Cookie分为两种：本地（持久化）Cookie和内存（非持久化）Cookie。在介绍分类的时候再细说。")])]),e._v(" "),s("blockquote",[s("p",[e._v("httpOnly: 顾名思义，httpOnly是指在HTTP层面上传输的Cookie。当服务端对Cookie消息设置了httpOnly标志之后，客户端脚本就无法通过document.cookie的方式读写cookie。能够读取意味着可以获取Cookie，能够写入Cookie意味着可以篡改Cookie。因此，对重要的Cookie消息设置httpOnly能够有效防御XSS攻击获取Cookie。")])]),e._v(" "),s("blockquote",[s("p",[e._v("secure: secure表明设置了secure字段的Cookie只能在HTTPS上进行安全数据传输。如果请求是HTTP的，就不会带上这个Cookie。这里要留心一点的是，服务端设置cookie下的secure字段，它并不是以名称-值对的形式的。而是单单一个secure单词。例如，Cookie信息只能发送给https://keith.com，而http://keith.com的请求则不能发送Cookie。")])]),e._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[e._v("如以下响应头，其他字段是名称"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("值对的形式，而secure是一个单词。\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[e._v("HTTP")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("1.1")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("200")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[e._v("OK")]),e._v("\nContent"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("Type"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" text"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v("html\nSet"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("Cookie"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" name"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("keith"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" domain"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("localhost"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" path"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" exipres"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("Mon"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("08")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("June"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("18")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("07")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("10")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("24")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[e._v("GMT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" secure\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br")])]),s("p",[e._v("但是，有一个很特别的是设置了secure字段的Cookie可以被读写。因此，一般情况下，如果只允许HTTPS获取数据，服务端可以一起配置secure + httpOnly字段，这样就能够保证HTTPS传输，并且避免了Cookie被读写的风险。")]),e._v(" "),s("ul",[s("li",[e._v("Cookie大小：")])]),e._v(" "),s("p",[e._v("大多数浏览器Cookie默认大小为4kb。超过的部分会被截断掉。")]),e._v(" "),s("ul",[s("li",[e._v("Cookie分类：")])]),e._v(" "),s("p",[e._v("根据Cookie中的expires字段，可以将Cookie分为本地（持久化）Cookie和内存（非持久化）Cookie。")]),e._v(" "),s("p",[e._v("当expires没有设置时，实际上就相当于一个内存Cookie。浏览器关闭之后就消失了。同时，在当前浏览器下，打开多个页面仍然可以访问到Cookie消息。也就是说，如果浏览器不关掉的情况下都会发送Cookie。")]),e._v(" "),s("p",[e._v("当expires设置一个未来的时间，那么就是一个本地Cookie。此时会将Cookie存入到操作系统本地，待过期时间到了才会消失。")]),e._v(" "),s("p",[e._v("因此根据expires字段，可以利用Cookie做用户登录认证、购物车信息存储等功能。")]),e._v(" "),s("ul",[s("li",[e._v("Cookie用途：")])]),e._v(" "),s("p",[e._v("当登录一个网站的时候。")]),e._v(" "),s("ul",[s("li",[e._v("客户端会将登录的账号和密码发送到服务器。")]),e._v(" "),s("li",[e._v("服务器对账号和密码进行加密算法之后生成session文件，然后会在响应时将set-cookie带在响应头。")]),e._v(" "),s("li",[e._v("客户端接着会将cookie保存在内存中。")]),e._v(" "),s("li",[e._v("客户端下次请求的时候，会将cookie作为请求头发往服务器。")]),e._v(" "),s("li",[e._v("服务器将对客户端传过来的cookie与session文件进行校验，如果校验通过，则可以直接登录。")])]),e._v(" "),s("p",[e._v("在购物场景中。")]),e._v(" "),s("ul",[s("li",[s("p",[e._v("客户端会将用户已经选购的商品1发往服务器。")])]),e._v(" "),s("li",[s("p",[e._v("服务器会生成一份session文件，在响应时带上set-cookie发往客户端。")])]),e._v(" "),s("li",[s("p",[e._v("客户端会保存服务端传来的cookie.")])]),e._v(" "),s("li",[s("p",[e._v("用户再次选择商品2，进行以上同样的操作。")])]),e._v(" "),s("li",[s("p",[e._v("此时用户需要结账，客户端会将cookie发往服务器")])]),e._v(" "),s("li",[s("p",[e._v("进入结账页面时就会出现两个商品。")])]),e._v(" "),s("li",[s("p",[e._v("Cookie缺点：")]),e._v(" "),s("ol",[s("li",[s("p",[e._v("Cookie的大小限制在4kb左右。对于复杂的存储来说是不够的")])]),e._v(" "),s("li",[s("p",[e._v("Cookie会被附加在每个HTTP请求中，所以会增加HTTP请求大小")])]),e._v(" "),s("li",[s("p",[e._v("由于Cookie都是在HTTP请求中明文传递的，会有安全性问题（除非使用HTTPS）")])])])])]),e._v(" "),s("h3",{attrs:{id:"session"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#session"}},[e._v("#")]),e._v(" session")]),e._v(" "),s("h3",{attrs:{id:"localstorage"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#localstorage"}},[e._v("#")]),e._v(" localstorage")]),e._v(" "),s("blockquote",[s("p",[e._v("HTML5新方法，不过IE8及以上浏览器都兼容。")])]),e._v(" "),s("ul",[s("li",[e._v("生命周期：持久化的本地存储，除非主动删除数据，否则数据是永远不会过期的。")]),e._v(" "),s("li",[e._v("存储的信息在同一域中是共享的。")]),e._v(" "),s("li",[e._v("当本页操作（新增、修改、删除）了localStorage的时候，本页面不会触发storage事件,但是别的页面会触发storage事件。")]),e._v(" "),s("li",[e._v("大小：据说是5M（跟浏览器厂商有关系）")]),e._v(" "),s("li",[e._v("在非IE下的浏览中可以本地打开。IE浏览器要在服务器中打开。")]),e._v(" "),s("li",[e._v("localStorage本质上是对字符串的读取，如果存储内容多的话会消耗内存空间，会导致页面变卡")]),e._v(" "),s("li",[e._v("localStorage受同源策略的限制")])]),e._v(" "),s("blockquote",[s("p",[e._v("操作")])]),e._v(" "),s("ul",[s("li",[e._v("设置： "),s("code",[e._v("localStorage.setItem('username','cfangxu');")])]),e._v(" "),s("li",[e._v("获取："),s("code",[e._v("localStorage.getItem('username')")])]),e._v(" "),s("li",[e._v("删除："),s("code",[e._v("localStorage.removeItem('username')")])]),e._v(" "),s("li",[e._v("情况："),s("code",[e._v("localStorage.clear()")])])]),e._v(" "),s("h3",{attrs:{id:"sessionstorage"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sessionstorage"}},[e._v("#")]),e._v(" sessionStorage")]),e._v(" "),s("blockquote",[s("p",[e._v("其实跟localStorage差不多，也是本地存储，会话本地存储")])]),e._v(" "),s("blockquote",[s("p",[e._v("用于本地存储一个会话（session）中的数据，这些数据只有在同一个会话中的页面才能访问并且当会话结束后数据也随之销毁，"),s("br"),e._v("\nsessionStorage不是一种持久化的本地存储，仅仅是会话级别的存储，也就是说只要这个浏览器窗口没有关闭，即使刷新页面或进入同源另一页面，数据仍然存在。关闭窗口后，sessionStorage即被销毁，或者在新窗口打开同源的另一个页面，sessionStorage也是没有的。")])]),e._v(" "),s("h3",{attrs:{id:"web-sql"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#web-sql"}},[e._v("#")]),e._v(" web sql")]),e._v(" "),s("h3",{attrs:{id:"indexeddb"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#indexeddb"}},[e._v("#")]),e._v(" indexedDB")]),e._v(" "),s("h3",{attrs:{id:"userdata-ie浏览器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#userdata-ie浏览器"}},[e._v("#")]),e._v(" UserData(IE浏览器)")])])}),[],!1,null,null,null);o.default=a.exports}}]);