(window.webpackJsonp=window.webpackJsonp||[]).push([[464],{910:function(e,t,r){"use strict";r.r(t);var i=r(19),s=Object(i.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h3",{attrs:{id:"git-revert-和-reset-区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#git-revert-和-reset-区别"}},[e._v("#")]),e._v(" git revert 和 reset 区别")]),e._v(" "),r("ol",[r("li",[r("p",[e._v("git revert 是用一次新的 commit 来回滚之前的 commit，git reset 是直接删除指定的 commit")])]),e._v(" "),r("li",[r("p",[e._v("git reset 是把 HEAD 向后移动了一下，而 git revert 是 HEAD 继续前进，只是新的 commit 的内容和要 revert 的内容正好相反，能够抵消要被 revert 的内容。")])])]),e._v(" "),r("h3",{attrs:{id:"git-merge-和-rebase-区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#git-merge-和-rebase-区别"}},[e._v("#")]),e._v(" git merge 和 rebase 区别")]),e._v(" "),r("ol",[r("li",[r("p",[e._v("rebase 操作不会生成新的节点，merge 操作会生成新的节点")])]),e._v(" "),r("li",[r("p",[e._v("rebase 会合并之前的 commit 历史，merge 命令不会保留 merge 的分支的 commit")])])]),e._v(" "),r("ul",[r("li",[e._v("应用场景：")])]),e._v(" "),r("blockquote",[r("p",[e._v("如果项目庞大，需要一个简洁的线性历史树便于 leader 管理，推荐使用 git rebase 。")])]),e._v(" "),r("blockquote",[r("p",[e._v("如果是小型项目，需要审查历史纪录来便于编写过程报告，则推荐使用 git merge 。")])])])}),[],!1,null,null,null);t.default=s.exports}}]);