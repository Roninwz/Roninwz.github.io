(window.webpackJsonp=window.webpackJsonp||[]).push([[494],{976:function(e,t,o){"use strict";o.r(t);var s=o(24),n=Object(s.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h2",{attrs:{id:"token登录认证"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#token登录认证"}},[e._v("#")]),e._v(" Token登录认证")]),e._v(" "),o("h3",{attrs:{id:"token登录认证设计流程"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#token登录认证设计流程"}},[e._v("#")]),e._v(" token登录认证设计流程")]),e._v(" "),o("ol",[o("li",[o("p",[e._v("用户发出登录请求，带着用户名和密码到服务器经行验证，服务器验证成功就在后台生成一个token返回给客户端")])]),e._v(" "),o("li",[o("p",[e._v("客户端将token存储到cookie中，服务端将token存储到redis中，可以设置存储token的有效期。")])]),e._v(" "),o("li",[o("p",[e._v("后续客户端的每次请求资源都必须携带token，这里放在请求头中，服务端接收到请求首先校验是否携带token，以及token是否和redis中的匹配，若不存在或不匹配直接拦截返回错误信息（如未认证）。")])])]),e._v(" "),o("h3",{attrs:{id:"关键技术点"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#关键技术点"}},[e._v("#")]),e._v(" 关键技术点")]),e._v(" "),o("p",[e._v("token管理：生成、校验、解析、删除")]),e._v(" "),o("p",[e._v("token：这里使用userId_UUID的形式")]),e._v(" "),o("p",[e._v("有效期：使用Redis key有效期设置（每次操作完了都会更新延长有效时间）")]),e._v(" "),o("p",[e._v("销毁token：删除Redis中key为userId的内容")]),e._v(" "),o("p",[e._v("token存储：客户端（Cookie）、服务端（Redis）")]),e._v(" "),o("p",[e._v("Cookie的存取操作（js-cookie插件）")]),e._v(" "),o("p",[e._v("Redis存取（StringRedisTemplate）")])])}),[],!1,null,null,null);t.default=n.exports}}]);