(window.webpackJsonp=window.webpackJsonp||[]).push([[502],{984:function(e,o,t){"use strict";t.r(o);var s=t(24),a=Object(s.a)({},(function(){var e=this,o=e.$createElement,t=e._self._c||o;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"单点登录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#单点登录"}},[e._v("#")]),e._v(" 单点登录")]),e._v(" "),t("p",[e._v("单点登录（Single Sign On），简称为 SSO")]),e._v(" "),t("h3",{attrs:{id:"sso的实现方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sso的实现方式"}},[e._v("#")]),e._v(" SSO的实现方式")]),e._v(" "),t("ol",[t("li",[t("p",[e._v("父域 Cookie")])]),e._v(" "),t("li",[t("p",[e._v("认证中心")])])]),e._v(" "),t("p",[e._v("我们可以部署一个认证中心，认证中心就是一个专门负责处理登录请求的独立的 Web 服务。")]),e._v(" "),t("p",[e._v("用户统一在认证中心进行登录，登录成功后，认证中心记录用户的登录状态，并将 Token 写入 Cookie。（注意这个 Cookie 是认证中心的，应用系统是访问不到的。）")]),e._v(" "),t("p",[e._v("应用系统检查当前请求有没有 Token，如果没有，说明用户在当前系统中尚未登录，那么就将页面跳转至认证中心。由于这个操作会将认证中心的 Cookie 自动带过去，因此，认证中心能够根据 Cookie 知道用户是否已经登录过了。如果认证中心发现用户尚未登录，则返回登录页面，等待用户登录，如果发现用户已经登录过了，就不会让用户再次登录了，而是会跳转回目标 URL ，并在跳转前生成一个 Token，拼接在目标 URL 的后面，回传给目标应用系统。")]),e._v(" "),t("p",[e._v("应用系统拿到 Token 之后，还需要向认证中心确认下 Token 的合法性，防止用户伪造。确认无误后，应用系统记录用户的登录状态，并将 Token 写入 Cookie，然后给本次访问放行。（注意这个 Cookie 是当前应用系统的，其他应用系统是访问不到的。）当用户再次访问当前应用系统时，就会自动带上这个 Token，应用系统验证 Token 发现用户已登录，于是就不会有认证中心什么事了。")]),e._v(" "),t("h2",{attrs:{id:"单一用户登录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#单一用户登录"}},[e._v("#")]),e._v(" 单一用户登录")])])}),[],!1,null,null,null);o.default=a.exports}}]);