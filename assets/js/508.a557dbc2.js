(window.webpackJsonp=window.webpackJsonp||[]).push([[508],{1052:function(t,e,r){"use strict";r.r(e);var a=r(14),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"设计模式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#设计模式"}},[t._v("#")]),t._v(" 设计模式")]),t._v(" "),r("p",[t._v("在软件工程中，设计模式（Design Pattern）是对软件设计中普遍存在（反复出现）的各种问题，所提出的解决方案")]),t._v(" "),r("p",[t._v("根据模式的目的来划分的话，GoF（Gang of Four）设计模式可以分为以下 3 种类型：")]),t._v(" "),r("ol",[r("li",[t._v("创建型模式")])]),t._v(" "),r("p",[t._v("用来描述 “如何创建对象”，它的主要特点是 “将对象的创建和使用分离”。包括单例、原型、工厂方法、抽象工厂和建造者 5 种模式")]),t._v(" "),r("ol",{attrs:{start:"2"}},[r("li",[t._v("结构型模式")])]),t._v(" "),r("p",[t._v("用来描述如何将类或对象按照某种布局组成更大的结构。包括代理、适配器、桥接、装饰、外观、享元和组合 7 种模式。")]),t._v(" "),r("ol",{attrs:{start:"3"}},[r("li",[t._v("行为型模式")])]),t._v(" "),r("p",[t._v("用来识别对象之间的常用交流模式以及如何分配职责。包括模板方法、策略、命令、职责链、状态、观察者、中介者、迭代器、访问者、备忘录和解释器 11 种模式。")]),t._v(" "),r("blockquote",[r("p",[t._v("参考："),r("a",{attrs:{href:"https://segmentfault.com/a/1190000030850326",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://segmentfault.com/a/1190000030850326"),r("OutboundLink")],1)])])])}),[],!1,null,null,null);e.default=n.exports}}]);