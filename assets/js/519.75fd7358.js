(window.webpackJsonp=window.webpackJsonp||[]).push([[519],{1007:function(t,e,n){"use strict";n.r(e);var s=n(24),o=Object(s.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"devops"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#devops"}},[t._v("#")]),t._v(" DevOps")]),t._v(" "),n("p",[t._v("DevOps 是一种软件开发方法。它将持续开发、持续测试、持续集成、持续部署和持续监控贯穿于软件开发的整个生命周期。")]),t._v(" "),n("h3",{attrs:{id:"ci-持续集成"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ci-持续集成"}},[t._v("#")]),t._v(" CI 持续集成")]),t._v(" "),n("p",[t._v("持续集成(Continuous integration)是一种软件开发实践，即团队开发成员经常集成它们的工作，通过每个成员每天至少集成一次，也就意味着每天可能会发生多次集成。每次集成都通过自动化的构建（包括编译，发布，自动化测试）来验证，从而尽早地发现集成错误。")]),t._v(" "),n("h3",{attrs:{id:"continuous-delivery-持续交付"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#continuous-delivery-持续交付"}},[t._v("#")]),t._v(" Continuous Delivery（持续交付）")]),t._v(" "),n("p",[t._v("持续交付（英语：Continuous delivery，缩写为 CD），是一种软件工程手法，让软件产品的产出过程在一个短周期内完成，以保证软件可以稳定、持续的保持在随时可以释出的状况。它的目标在于让软件的建置、测试与释出变得更快以及更频繁。这种方式可以减少软件开发的成本与时间，减少风险。")]),t._v(" "),n("h3",{attrs:{id:"continuous-deployment-持续部署"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#continuous-deployment-持续部署"}},[t._v("#")]),t._v(" Continuous Deployment（持续部署）")]),t._v(" "),n("p",[t._v("持续部署（continuous deployment）是通过自动化的构建、测试和部署循环来快速交付高质量的产品。某种程度上代表了一个开发团队工程化的程度，毕竟快速运转的互联网公司人力成本会高于机器，投资机器优化开发流程化相对也提高了人的效率，让 engineering productivity 最大化。")])])}),[],!1,null,null,null);e.default=o.exports}}]);