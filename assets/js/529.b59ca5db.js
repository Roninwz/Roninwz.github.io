(window.webpackJsonp=window.webpackJsonp||[]).push([[529],{1082:function(v,_,t){"use strict";t.r(_);var a=t(14),e=Object(a.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h3",{attrs:{id:"大文件上传满足条件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#大文件上传满足条件"}},[v._v("#")]),v._v(" 大文件上传满足条件")]),v._v(" "),t("ul",[t("li",[v._v("支持拆分上传请求(即切片上传)")]),v._v(" "),t("li",[v._v("支持断点续传")]),v._v(" "),t("li",[v._v("支持显示上传进度和暂停上传")])]),v._v(" "),t("h3",{attrs:{id:"大文件上传解决方案"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#大文件上传解决方案"}},[v._v("#")]),v._v(" 大文件上传解决方案")]),v._v(" "),t("ul",[t("li",[v._v("vue-simple-uploader 组件")])]),v._v(" "),t("blockquote",[t("p",[v._v("vue-simple-uploader 是基于 simple-uploader.js 封装的 vue 上传插件")])]),v._v(" "),t("blockquote",[t("p",[v._v("安装："),t("code",[v._v("npm install vue-simple-uploader --save")])])]),v._v(" "),t("blockquote",[t("p",[v._v("教程地址："),t("a",{attrs:{href:"https://www.cnblogs.com/xiahj/p/vue-simple-uploader.html",target:"_blank",rel:"noopener noreferrer"}},[v._v("https://www.cnblogs.com/xiahj/p/vue-simple-uploader.html"),t("OutboundLink")],1)])]),v._v(" "),t("h3",{attrs:{id:"切片上传"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#切片上传"}},[v._v("#")]),v._v(" 切片上传")]),v._v(" "),t("blockquote",[t("p",[v._v("编码方式上传中，在前端我们只要先获取文件的二进制内容，然后对其内容进行拆分，最后将每个切片上传到服务端即可。"),t("br"),v._v("\n在 JavaScript 中，文件 FIle 对象是 Blob 对象的子类，Blob 对象包含一个重要的方法 slice，通过这个方法，我们就可以对二进制文件进行拆分。")])]),v._v(" "),t("blockquote",[t("p",[v._v("实现步骤")])]),v._v(" "),t("ol",[t("li",[t("p",[v._v("把大文件进行分段（循环分解文件，依次创建文件切片） 比如 2M，发送到服务器携带一个标志，暂时用当前的时间戳，用于标识一个完整的文件")])]),v._v(" "),t("li",[t("p",[v._v("服务端保存各段文件")])]),v._v(" "),t("li",[t("p",[v._v("浏览器端所有分片上传完成，发送给服务端一个合并文件的请求")])]),v._v(" "),t("li",[t("p",[v._v("服务端根据文件标识、类型、各分片顺序进行文件合并")])]),v._v(" "),t("li",[t("p",[v._v("删除分片文件")])])]),v._v(" "),t("h3",{attrs:{id:"断点续传"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#断点续传"}},[v._v("#")]),v._v(" 断点续传")]),v._v(" "),t("blockquote",[t("p",[v._v("断点续传：可以从已经上传部分开始继续上传未完成的部分，而没有必要从头开始上传，节省上传时间。")])]),v._v(" "),t("blockquote",[t("p",[v._v("解决了大文件上传超时和服务器的限制")])]),v._v(" "),t("blockquote",[t("p",[v._v("实现方案：")])]),v._v(" "),t("ul",[t("li",[v._v("为每个切片生成 hash 值，使用 spark-md5 库")]),v._v(" "),t("li",[v._v("在切片上传成功后，保存已上传的切片信息(前端：locaStorage，后端：接口保存，查询)")]),v._v(" "),t("li",[v._v("重新上传时，遍历切片列表，进行和本地分段 hash 值的对比，如果相同的话则跳过，继续下一个分段的上传(只选择未上传的切片进行上传,)")]),v._v(" "),t("li",[v._v("所有切片上传完毕后，再调用 mkfile 接口通知服务端进行文件合并")])]),v._v(" "),t("blockquote",[t("p",[v._v("问题：切片过期")])]),v._v(" "),t("h3",{attrs:{id:"秒传"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#秒传"}},[v._v("#")]),v._v(" 秒传")]),v._v(" "),t("p",[v._v("原理：计算整个文件的 HASH，在执行上传操作前，向服务端发送请求，传递 MD5 值，后端进行文件检索。若服务器中已存在该文件，便不进行后续的任何操作，上传也便直接结束。")]),v._v(" "),t("blockquote",[t("p",[v._v("问题：不想秒传，怎么操作？")])]),v._v(" "),t("p",[v._v("要不秒传，其实只要让 MD5 改变，就是对文件本身做一下修改（改名字不行），例如一个文本文件，你多加几个字，MD5 就变了，就不会秒传了.")]),v._v(" "),t("h3",{attrs:{id:"上传进度和暂停"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#上传进度和暂停"}},[v._v("#")]),v._v(" 上传进度和暂停")]),v._v(" "),t("p",[v._v("通过 xhr.upload 中的 progress 方法可以实现监控每一个切片上传进度。")]),v._v(" "),t("p",[v._v("上传暂停的实现也比较简单，通过 xhr.abort 可以取消当前未完成上传切片的上传，实现上传暂停的效果，恢复上传就跟断点续传类似，先获取已上传的切片列表，然后重新发送未上传的切片。")]),v._v(" "),t("h3",{attrs:{id:"hash-计算"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hash-计算"}},[v._v("#")]),v._v(" Hash 计算")]),v._v(" "),t("ol",[t("li",[t("p",[v._v("秒传，需要通过 MD5 值判断文件是否已存在。")])]),v._v(" "),t("li",[t("p",[v._v("续传：需要用到 MD5 作为 key 值，当唯一值使用。")])])]),v._v(" "),t("h2",{attrs:{id:"大文件上传问题汇总"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#大文件上传问题汇总"}},[v._v("#")]),v._v(" 大文件上传问题汇总")]),v._v(" "),t("p",[v._v("切片上传失败怎么办")]),v._v(" "),t("p",[v._v("上传过程中刷新页面怎么办")]),v._v(" "),t("p",[v._v("如何进行并行上传")]),v._v(" "),t("p",[v._v("切片什么时候按数量切，什么时候按大小切")]),v._v(" "),t("p",[v._v("如何结合 Web Worker 处理大文件上传")]),v._v(" "),t("p",[v._v("如何实现秒传")])])}),[],!1,null,null,null);_.default=e.exports}}]);