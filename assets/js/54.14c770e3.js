(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{505:function(t,s,a){"use strict";a.r(s);var r=a(24),e=Object(r.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"bfs和dfs区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bfs和dfs区别"}},[t._v("#")]),t._v(" BFS和DFS区别")]),t._v(" "),a("p",[t._v("广度优先搜索算法（Breadth-First-Search，缩写为 BFS），是一种利用队列实现的搜索算法。简单来说，其搜索过程和 “湖面丢进一块石头激起层层涟漪” 类似。")]),t._v(" "),a("p",[t._v("深度优先搜索算法（Depth-First-Search，缩写为 DFS），是一种利用递归实现的搜索算法。简单来说，其搜索过程和 “不撞南墙不回头” 类似。")]),t._v(" "),a("p",[t._v("BFS 的重点在于队列，而 DFS 的重点在于递归。这是它们的本质区别。")]),t._v(" "),a("h2",{attrs:{id:"bfs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bfs"}},[t._v("#")]),t._v(" BFS")]),t._v(" "),a("p",[t._v("BFS是从根节点开始，沿着树的宽度遍历树的节点，如果发现目标，则演算终止。")]),t._v(" "),a("h2",{attrs:{id:"dfs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dfs"}},[t._v("#")]),t._v(" DFS")]),t._v(" "),a("p",[t._v("简单来说，从根节点出发，然后依次向下继续搜索，直到遇到叶子节点，此时就会向上回溯，继续向为访问过的点继续深度搜索。")])])}),[],!1,null,null,null);s.default=e.exports}}]);