(window.webpackJsonp=window.webpackJsonp||[]).push([[564],{1129:function(e,v,_){"use strict";_.r(v);var t=_(14),r=Object(t.a)({},(function(){var e=this,v=e.$createElement,_=e._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("h2",{attrs:{id:"技术术语"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#技术术语"}},[e._v("#")]),e._v(" 技术术语")]),e._v(" "),_("h3",{attrs:{id:"api"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#api"}},[e._v("#")]),e._v(" API")]),e._v(" "),_("p",[e._v("应用程序接口（英语：Application Programming Interface，缩写：API；又称为应用编程接口）")]),e._v(" "),_("p",[e._v("是软件系统不同组成部分衔接的约定，而通俗的讲，API 是一段应用程序与另一段应用程序相互“交流”的方式（协议）")]),e._v(" "),_("h3",{attrs:{id:"rest"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#rest"}},[e._v("#")]),e._v(" REST")]),e._v(" "),_("p",[e._v("REST  即表述性状态传递（英文：Representational State Transfer，简称 REST）")]),e._v(" "),_("p",[e._v("REST API 是一组关于如何构建 Web 应用程序 API 的架构规则、标准或指导，或者说 REST API 是遵循 API 原则的一种架构风格")]),e._v(" "),_("p",[e._v("REST 是专门针对 Web 应用程序而设计的，其目的在于降低开发的复杂度，提高系统的可伸缩性。")]),e._v(" "),_("p",[e._v("下面是设计 REST 风格的系统架构时需要满足或者遵循的一些基本条件和原则：")]),e._v(" "),_("ol",[_("li",[e._v("在 REST 架构中，Web 中所有的事物（文本、音频、视频、图片、链接）都可以被统一的抽象为资源（resource）")]),e._v(" "),_("li",[e._v("在 REST 架构中，每一个资源都有与之对应的唯一资源标识符（resource identifier）,当资源的状态发生改变时,资源标识符不会发生改变")]),e._v(" "),_("li",[e._v("在 REST 架构中，所有的操作都是无状态的。REST 架构遵循 CRUD 原则，所有的资源都可以通过 GET、POST、PUT 和 DELETE 这四种行为完成对应的操作。")]),e._v(" "),_("li",[e._v("可缓存（可选项），在 REST 架构中需要缓存来有效的处理大批量的请求")]),e._v(" "),_("li",[e._v("接口一致")])]),e._v(" "),_("p",[e._v("API 和 REST API 关系：")]),e._v(" "),_("p",[e._v("如果按照数学上集合的概念来解释 API 与 REST API 之间的联系与区别，API 是 REST API 的超集，REST API 是 API 的子集；所有的 REST API 都是 API，但不是所有的 API 都是 REST API。更通俗的解释是：所有的男人都是人，但不是所有的人都是男人。")]),e._v(" "),_("blockquote",[_("p",[e._v("参考：API、REST API、RESTful API 和 Web Service 之间的异同"),_("a",{attrs:{href:"https://cloud.tencent.com/developer/article/1448167",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://cloud.tencent.com/developer/article/1448167"),_("OutboundLink")],1)])]),e._v(" "),_("h3",{attrs:{id:"restful"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#restful"}},[e._v("#")]),e._v(" RESTful")]),e._v(" "),_("p",[e._v("RESTful 是一种架构的规范与约束、原则，符合这种规范的架构就是 RESTful 架构。")]),e._v(" "),_("p",[e._v("REST API 是 Web API 设计的一种规范或者指导原则，而 RESTful API 则是这中架构设计原则或者规范的一种具体实现方式。也就是说，RESTful API 是 REST API 的非正式实现方式，因为实现 REST API 的方式有很多，RESTful API 只是其中一种，且没有完全满足 REST API 的所有设计原则，每个开发者在实现 REST 架构时的则重点都会有差别。")]),e._v(" "),_("h3",{attrs:{id:"web-service"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#web-service"}},[e._v("#")]),e._v(" Web Service")]),e._v(" "),_("h2",{attrs:{id:"后端术语"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#后端术语"}},[e._v("#")]),e._v(" 后端术语")]),e._v(" "),_("p",[e._v("3.URL: 是统一资源定位符  Uniform Resource Locator  对可以从互联网上得到的资源的位置和访问方法的一种简洁的表示")]),e._v(" "),_("p",[e._v("4.URI:统一资源标识符  Uniform Resource Identifier   是一个用于标识某一互联网资源名称的字符串")]),e._v(" "),_("p",[e._v("5.JAX-RS：Java API for RESTful Web Services，是 java 的一个小框架，实现了 restful 风格")]),e._v(" "),_("p",[e._v("6.Jersey：是一个框架，实现了 restful 风格，类似于 SpringMVC 实现了 MVC 设计思想")]),e._v(" "),_("p",[e._v("7.FreeMarker 是一款模板引擎，是一个 Java 类库，是一款程序员可以嵌入他们所开发产品的组件")]),e._v(" "),_("p",[e._v("UI：user interface\nGUI : graphical user interface  (图形用户接口) 用图形的方式,来显示计算机操作的界面,这样方便更直观。\nCLI : Command line User Interface(命令行用户接口) 最常见的 DOS 命令操作。")]),e._v(" "),_("ul",[_("li",[_("p",[e._v("单机")]),e._v(" "),_("blockquote",[_("p",[e._v("单机就是所有的业务全部写在一个项目中，部署服务到一台服务器上，所有的请求业务都由这台服务器处理。")])])]),e._v(" "),_("li",[_("p",[e._v("微服务")]),e._v(" "),_("blockquote",[_("p",[e._v("微服务是一种开发软件的架构和组织方法,其中软件由通过明确定义的 API 进行通信的小型独立服务组成。这些服务由各个小型独立团队负责")])])]),e._v(" "),_("li",[_("p",[e._v("集群")]),e._v(" "),_("blockquote",[_("p",[e._v("同一个业务，部署在多个服务器上\n集群也分为高可用集群，负载均衡集群（可能高并发架构就是负载均衡架构的升级版）。\n高可用集群工具常见的有：heartbeat，pacemaker，keepalived\n负载均衡器工具常见的有：nginx，lvs，HAproxy")])])]),e._v(" "),_("li",[_("p",[e._v("分布式")]),e._v(" "),_("blockquote",[_("p",[e._v("一个业务分拆多个子业务，部署在不同的服务器上,分布式是个工作方式。")])])]),e._v(" "),_("li",[_("p",[e._v("负载均衡")]),e._v(" "),_("blockquote",[_("p",[e._v("其意思就是分摊到多个操作单元上进行执行，从而共同完成工作任务；")])])]),e._v(" "),_("li",[_("p",[e._v("中间件")]),e._v(" "),_("blockquote",[_("p",[e._v("是一种独立的系统软件或服务程序，分布式应用软件借助这种软件在不同的技术之间共享资源。")])])])]),e._v(" "),_("ul",[_("li",[e._v("中台\n"),_("blockquote",[_("p",[e._v("中台更多是因为公司业务在发展到某一阶段时，遇到瓶颈与障碍后，为解决实际问题而提出的解决方案。")])]),e._v(" "),_("ul",[_("li",[e._v("技术平台：像微服务开发框架、Devops 平台、PaaS 平台，容器云之类的，人们都叫它“技术中台”。")]),e._v(" "),_("li",[e._v("微服务业务平台：像最常见的什么用户中心，订单中心，各种微服务集散地，人们都叫它“业务中台”。")]),e._v(" "),_("li",[e._v("组织中台：中台应该是组织的事情，在释放潜能：类似于企业内部资源调度中心和内部创新孵化组织，人们叫它“组织中台”。")])])])]),e._v(" "),_("ul",[_("li",[_("p",[e._v("数据埋点")]),e._v(" "),_("blockquote",[_("p",[_("a",{attrs:{href:"https://www.zhihu.com/question/36411025",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://www.zhihu.com/question/36411025"),_("OutboundLink")],1)])])]),e._v(" "),_("li",[_("p",[e._v("Unicode：是包含世界上所有字符的字符集")])]),e._v(" "),_("li",[_("p",[e._v("UTF-8、UTF-16： 是 Unicode 字符集，不同的编码实现")])])]),e._v(" "),_("h2",{attrs:{id:"网络术语"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#网络术语"}},[e._v("#")]),e._v(" 网络术语")]),e._v(" "),_("ul",[_("li",[e._v("1，RTMP 协议")])]),e._v(" "),_("p",[e._v("（1）是流媒体协议。")]),e._v(" "),_("p",[e._v("（2）RTMP 协议是  Adobe  的私有协议，未完全公开。")]),e._v(" "),_("p",[e._v("（3）RTMP 协议一般传输的是  flv，f4v  格式流。")]),e._v(" "),_("p",[e._v("（4）RTMP 一般在  TCP 1 个通道上传输命令和数据。")]),e._v(" "),_("ul",[_("li",[e._v("2，RTSP 协议")])]),e._v(" "),_("p",[e._v("（1）是流媒体协议。")]),e._v(" "),_("p",[e._v("（2）RTSP 协议是共有协议，并有专门机构做维护。.")]),e._v(" "),_("p",[e._v("（3）RTSP 协议一般传输的是  ts、mp4  格式的流。")]),e._v(" "),_("p",[e._v("（4）RTSP 传输一般需要  2-3  个通道，命令和数据通道分离。")]),e._v(" "),_("ul",[_("li",[e._v("3.Kerberos 认证")])])])}),[],!1,null,null,null);v.default=r.exports}}]);