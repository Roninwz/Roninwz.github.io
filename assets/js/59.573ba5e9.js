(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{578:function(t,a,s){"use strict";s.r(a);var r=s(14),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"双指针"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#双指针"}},[t._v("#")]),t._v(" 双指针")]),t._v(" "),s("h3",{attrs:{id:"快慢指针-相同方向"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#快慢指针-相同方向"}},[t._v("#")]),t._v(" 快慢指针(相同方向)")]),t._v(" "),s("p",[t._v("快慢指针也是双指针，但是两个指针从同一侧开始遍历数组，将这两个指针分别定义为快指针（fast）和慢指针（slow），两个指针以不同的策略移动，直到两个指针的值相等（或其他特殊条件）为止，如 fast 每次增长两个，slow 每次增长一个。")]),t._v(" "),s("ol",[s("li",[t._v("确认是否为环形链表问题")]),t._v(" "),s("li",[t._v("删除排序数组中的重复项")])]),t._v(" "),s("h3",{attrs:{id:"对撞指针-相反方向"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对撞指针-相反方向"}},[t._v("#")]),t._v(" 对撞指针(相反方向)")]),t._v(" "),s("p",[t._v("对撞指针是指在有序数组中，将指向最左侧的索引定义为左指针(left)，最右侧的定义为右指针(right)，然后从两头向中间进行数组遍历。")]),t._v(" "),s("blockquote",[s("p",[t._v("对撞数组适用于有序数组，也就是说当你遇到题目给定有序数组时，应该第一时间想到用对撞指针解题。")])])])}),[],!1,null,null,null);a.default=e.exports}}]);